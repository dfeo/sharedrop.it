# HTTP server block: redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name sharedrop.it;

    # Redirect to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl http2;
    server_name sharedrop.it;

    # Use Let's Encrypt certificate files
    ssl_certificate /etc/letsencrypt/live/sharedrop.it/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sharedrop.it/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    expires epoch;

    # Serve static client files
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
    }

    # Reverse proxy to Node.js for API calls under /server
    location /server {
        proxy_pass http://node:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Reverse proxy for socket.io connections
    location /socket.io/ {
        proxy_pass http://node:3000/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Serve the CA certificate if needed
    location /ca.crt {
        alias /etc/ssl/certs/snapdropCA.crt;
    }

    # Custom error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
